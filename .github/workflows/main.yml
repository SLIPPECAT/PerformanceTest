name: ngrinder test result To slack
 
on:
  workflow_dispatch:

permissions:
  contents: read


# test에 필요한 ec2 인스턴스를 aws cli를 통해 실행

# aws cli를 사용해서 각 인스턴스의 public ip를 환경변수로 등록

# 메인 ec2에 스프링 실행

# 테스트용 ec2에 스프링 실행

# EC2- Ngrinder Controller를 실행
      - name: Ngrinder Controller Start
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.AWS_EC2_CONTROLLER_IP }}
          username: ec2-user
          key: ${{ secrets.AWS_SECRET_PEM }}
          script: |
            bash controller_run.sh
            
# EC2- Ngrinder Agent를 실행
      - name: Ngrinder Agent Start
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.AWS_EC2_AGENT_IP }}
          username: ec2-user
          key: ${{ secrets.AWS_SECRET_PEM }}
          script: |
            bash ./agent_run.sh
            
# Controller와 Agent가 완전히 실행될 때 까지 기다림
      - name: Sleep for 30 seconds - waiting controller,agent run
        run: sleep 30s
        shell: bash
        
        
# Ngrinder Rest Api 를 통해 성능테스트 생성 - 실행
      - name: HTTP Request Action - Ngrinder rest api perf_test
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'http:/localhost:7070'
          method: 'POST'
          username: 'admin'
          password: 'admin'
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"param" : "http://127.0.0.1", "testName" : "zzangmin_perftest", "tagString" : "spring perf", "description" : "zzangminzzang", "scheduledTime" : "", "useRampUp": false, "rampUpType" : "PROCESS", "threshold" : "D", "scriptName" : "first.groovy", "duration" : ${{ env.test-duration }}, "runCount" : 1, "agentCount" : 1, "vuserPerAgent" : 1, "processes" : 1, "rampUpInitCount" : 0, "rampUpInitSleepTime" : 0, "rampUpStep" : 1, "rampUpIncrementInterval" : 1000, "threads": 1, "testComment" : "제발돼라", "samplingInterval" : 2, "ignoreSampleCount" : 0, "status" : "READY"}'
          timeout: '60000'


# 성능테스트가 진행되는 동안 기다림
      - name: Sleep for 130 seconds - waiting test...
        run: sleep 130s
        shell: bash


# Ngrinder Rest Api 를 통해 테스트 결과 조회
      - name: Get Ngrinder test result ...
        uses: satak/webrequest-action@master
        id: NgrinderTestResult
        with:
          url: 'http://127.0.0.1/perftest/api?page=0'
          method: GET
          username: admin
          password: admin


# 슬랙으로 테스트 결과 전송
      - name: send test result...
        uses: 8398a7/action-slack@v3
        with:
          text: '${{ steps.NgrinderTestResult.outputs.output }}'
          status: ${{ job.status }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always() # Pick up events even if the job fails or is canceled.
